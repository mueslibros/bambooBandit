<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>bambooBandit_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objectParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// inherit
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create
smileTime = 60
xTarget = x
yTarget = y
xStart = x
yStart = y

xPre = x


// input
inAttack = 0
inX = 0
inY = 0

ilX = 0
ilY = 0

xChange = 0


movePlus = 4
moveSpeed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move

// reset
inX = 0;
inY = 0;
xChange = 0;


// X
if (keyboard_check(vk_left)) { inX = -1; ilX = -1 }
else if (keyboard_check(vk_right)) { inX = 1; ilX = 1 }

// Y
if (keyboard_check_pressed(vk_up))        { inY = -1; ilY = -1 }
else if (keyboard_check_pressed(vk_down)) { inY = 1; ilY = 1}



if (x = xTarget and ilX != 0){

    var checkDist;

    if (xTarget &gt;= xStart and ilX = 1) checkDist = gridSizeX
    else                               checkDist = gridSizeX

    if (!position_meeting(xTarget+ilX*checkDist, yTarget, bamboo)){
        xTarget += ilX*gridSizeX
        xTarget = floor(xTarget/gridSizeX)*gridSizeX
    }

    
    ilX = 0
}



// update target




// change target y
var difX = xTarget - x;
var mvSpd = clamp(difX, 1, 4)*sign(difX)


if (x &gt;= xStart) {
    x = xStart
    xTarget -= mvSpd
    
    if (round(x) = round(xTarget)){
        xTarget = x
        xChange = difX
    }
    else {
        xChange = mvSpd
    }

}
else {
    if (round(xDif) &lt;= 1) {
        x = xTarget
    }
    else x += mvSpd
}







// change target y
if (y = yTarget and ilY != 0){
    if (place_free(xTarget,yTarget+ilY*gridSizeY/2)){
        yTarget += ilY*gridSizeY
        yTarget = round(yTarget/gridSizeY)*gridSizeY
    }
    ilY = 0
}


// update target
var yDif = yTarget - y

if (abs(yDif) &lt; 2) y = yTarget
else               y += yDif*0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// inherit
event_inherited()



draw_text(x,y,xTarget)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw

// draw shaft

draw_sprite_ext( banditIdle_s, image_index, 
                drawPositionX,
                drawPositionY, 
                drawScaleX,
                drawScaleX,
                0, c_white, 1 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
